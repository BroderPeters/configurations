{
	// Place your snippets for csharp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"NewClass": {
		"prefix": "nc",
		"body": [
			"namespace ",
			"{",
			"    public class ${TM_FILENAME_BASE:class}",
			"    {",
			"",
			"    }",
			"}"
		]
	},
	"EntityBuilderWithMethod": {
		"prefix": "ebm",
		"body": [
			"public ${TM_FILENAME_BASE:default} With${0}${CLIPBOARD/[\\_]//}(${1:type} ${CLIPBOARD/[\\_]//})",
			"{",
			"    ${CLIPBOARD:parameter} = ${CLIPBOARD/[\\_]//};",
			"    return this;",
			"}"
		]
	},
	"EntityBuilderWithIntMethod": {
		"prefix": "ebi",
		"body": [
			"public ${TM_FILENAME_BASE:default} With${0}${CLIPBOARD/[\\_]//}(int ${CLIPBOARD/[\\_]//})",
			"{",
			"    ${CLIPBOARD:parameter} = ${CLIPBOARD/[\\_]//};",
			"    return this;",
			"}"
		]
	},
	"EntityBuilderWithStringMethod": {
		"prefix": "ebs",
		"body": [
			"public ${TM_FILENAME_BASE:default} With${0}${CLIPBOARD/[\\_]//}(string ${CLIPBOARD/[\\_]//})",
			"{",
			"    ${CLIPBOARD:parameter} = ${CLIPBOARD/[\\_]//};",
			"    return this;",
			"}"
		]
	},
	"EntityBuilderWithDatetimeMethod": {
		"prefix": "ebd",
		"body": [
			"public ${TM_FILENAME_BASE:default} With${0}${CLIPBOARD/[\\_]//}(Datetime ${CLIPBOARD/[\\_]//})",
			"{",
			"    ${CLIPBOARD:parameter} = ${CLIPBOARD/[\\_]//};",
			"    return this;",
			"}"
		]
	},
	"EntityBuilderBuild": {
		"prefix": "ebb",
		"body": [
			"public ${0:Entity} Build()",
			"{",
			"    return new ${0:Entity}",
			"    {",
			"",
			"    };",
			"}"
		]
	}
}
